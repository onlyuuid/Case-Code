"""
运算符
    Python语言支持以下类型的运算符:
        算术运算符
        比较(关系)运算符
        赋值运算符
        逻辑运算符
        位运算符
        成员运算符
        身份运算符
        远算符优先级
"""

# 1. Python算术运算符
# 假设以下变量a = 10, 变量b = 21:
"""
    运算符             描述                          实例
      +               加 - 两个对象相加               a + b 输出结果31
      -               减 - 两个对象相减               a - b 输出结果-11
      *               乘 - 两个数相乘或是返回一个
                           被重复若干次的字符串        a * b 输出结果210
      /               除 - x 除以y                   b / a 结果输出2.1
      %               取模 - 返回除法的余数            b % a 结果输出1
      **              幂 - 返回x 的 y次幂             a**b 为10 的21次方
      //              取整除 - 往小的方向取整数         9 // 2   4
                                                    -9 // 2  -5 
"""
# 以下实例演示了Python所有算术运算符的操作
a = 21
b = 10
c = 0

c = a + b
print("c1的值为: ",c)

c = a - b
print("c2 的值为: ", c)

c = a * b
print("c3的值为: ",c)

c = a / b
print("c4的值为: ", c)

c = a % b
print("c5的值为: ", c)

# 修改变量 a, b, c
a = 2
b = 3
c = a ** b
print("c6的值为: ", c)

a = 10
b = 5
c = a // b
print("c7的值为: ", c)

"""
c1的值为:  31
c2 的值为:  11
c3的值为:  210
c4的值为:  2.1
c5的值为:  1
c6的值为:  8
c7的值为:  2
"""

# 2. Python比较运算符
# 以下假设变量a 为 10, 变量b为20:
"""
    运算符                              描述                                        实例
    ==                              等于 - 比较对象是否相等                       (a == b)返回False
    !=                              不等于 - 比较两个对象是否不相等                (a != b)返回Ture
    >                               大于 - 返回x是否大于y                        (a > b)返回False
    <                               小于 - 返回x是否小于y. 所有比较运算符返回1表示真, (a < b)返回真 
                                    返回0表示假. 这分别与特殊的变量Ture和False等价. 
                                    注意, 这些变量名的大写.
    >=                              大于等于 - 返回x是否大于等于y                  (a >= b)返回False
    <=                              小于等于 - 返回x是否小于等于y                  (a <= b) Ture
"""
# 以下实例演示了Python所有的比较运算符操作:
a = 21
b = 10
c = 0

if (a == b):
    print("1 - a 等于b")
else:
    print("1 - a 不等于 b")

if (a != b):
    print("2 - a 不等于b")
else:
    print("2 - a 等于b")

if (a < b):
    print("3 - a 小于b ")
else:
    print("3 - a 大于等于b")

if (a > b):
    print("4 - a 大于b")
else:
    print("4 - a 小于等于b")

# 修改变量a 和 b的值
a = 5
b = 20

if (a <= b):
    print("5 - a 小于等于b")
else:
    print("5 - a 大于b")

if (a >= b):
    print("6 - a 大于等于 b")
else:
    print("6 - a 小于b")
"""
1 - a 不等于 b
2 - a 不等于b
3 - a 大于等于b
4 - a 大于b
5 - a 小于等于b
6 - a 小于b
"""

# 3. Python赋值运算符
# 以下假设变量a为10, 变量b 为20:
"""
运算符                 描述                      实例
 =                    简单的赋值运算符            c = a + b 将a + b 的结果赋值为c
+=                    加法赋值运算符              c += a 等效于 c = c + a
-=                    减法赋值运算符              c -= a 等效于 c = c - a
*=                    乘法赋值运算符              c *= a 等效于 c = c * a
/=                    除法赋值运算符              c /= a 等效于 c = c / a
%=                    取模赋值运算符              c %= a 等效于 c = c % a
**=                   幂赋值运算符                c **= a 等效于 c = c ** a
//=                   取整除赋值运算符             c //= a 等效于 c = c // a
:=                    海象运算符, 这个运算符的         在这个示例中, 赋值表达式可以避免被调用两次:
                      主要目的是在表达式中同时进行       if (n := len(a)) > 10:
                      赋值和返回赋值的值                      print(f"List is too long {n} elements, 
                                                    expected <= 10")
"""
